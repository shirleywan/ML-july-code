# Enter your network definition here.
# Use Shift+Enter to update the visualization.
name: "vggm_re_2branch"
# Enter your network definition here.
# Use Shift+Enter to update the visualization.
layer {
  name: "data_a"
  type: "Data"
  top: "data_a"
  top: "label_a"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
mean_value:103.771
mean_value:99.693
mean_value:104.67
  }
  data_param {
    source: "/home/liuhongma/caffe-master-modelTrainTest/examples/huawei/lhm_newtrain_28728ID_192_96_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
#input: "data_a"
#input_shape {
#  dim: 1
#  dim: 3
#  dim: 192
#  dim: 96
#}

layer {
  name: "conv1_a"
  type: "Convolution"
  bottom: "data_a"
  top: "conv1_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv1_a"
  top: "conv1_a"
  name: "bn1_a"
  type: "BatchNorm"

}

layer {
  bottom: "conv1_a"
  top: "conv1_a"
  name: "scale1_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1_a"
  type: "ReLU"
  bottom: "conv1_a"
  top: "conv1_a"
}


layer {
  name: "pool1_a"
  type: "Pooling"
  bottom: "conv1_a"
  top: "pool1_a"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_a"
  type: "Convolution"
  bottom: "pool1_a"
  top: "conv2_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv2_a"
  top: "conv2_a"
  name: "bn2_a"
  type: "BatchNorm"

}

layer {
  bottom: "conv2_a"
  top: "conv2_a"
  name: "scale2_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2_a"
  type: "ReLU"
  bottom: "conv2_a"
  top: "conv2_a"
}

layer {
  name: "pool2_a"
  type: "Pooling"
  bottom: "conv2_a"
  top: "pool2_a"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3_a"
  type: "Convolution"
  bottom: "pool2_a"
  top: "conv3_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv3_a"
  top: "conv3_a"
  name: "bn3_a"
  type: "BatchNorm"

}

layer {
  bottom: "conv3_a"
  top: "conv3_a"
  name: "scale3_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3_a"
  type: "ReLU"
  bottom: "conv3_a"
  top: "conv3_a"
}
layer {
  name: "conv4_a"
  type: "Convolution"
  bottom: "conv3_a"
  top: "conv4_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv4_a"
  top: "conv4_a"
  name: "bn4_a"
  type: "BatchNorm"

}

layer {
  bottom: "conv4_a"
  top: "conv4_a"
  name: "scale4_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4_a"
  type: "ReLU"
  bottom: "conv4_a"
  top: "conv4_a"
}
layer {
  name: "conv5_a"
  type: "Convolution"
  bottom: "conv4_a"
  top: "conv5_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
      
}
layer {
  bottom: "conv5_a"
  top: "conv5_a"
  name: "bn5_a"
  type: "BatchNorm"

}

layer {
  bottom: "conv5_a"
  top: "conv5_a"
  name: "scale5_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu5_a"
  type: "ReLU"
  bottom: "conv5_a"
  top: "conv5_a"
}
layer {
  name: "pool5_a"
  type: "Pooling"
  bottom: "conv5_a"
  top: "pool5_a"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6-r_a"
  type: "InnerProduct"
  bottom: "pool5_a"
  top: "fc6_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  bottom: "fc6_a"
  top: "fc6_a"
  name: "bn6_a"
  type: "BatchNorm"

}

layer {
  bottom: "fc6_a"
  top: "fc6_a"
  name: "scale6_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6_a"
  type: "ReLU"
  bottom: "fc6_a"
  top: "fc6_a"
}
layer {
  name: "drop6_a"
  type: "Dropout"
  bottom: "fc6_a"
  top: "fc6_a"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7-r_a"
  type: "InnerProduct"
  bottom: "fc6_a"
  top: "fc7_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  bottom: "fc7_a"
  top: "fc7_a"
  name: "bn7_a"
  type: "BatchNorm"

}

layer {
  bottom: "fc7_a"
  top: "fc7_a"
  name: "scale7_a"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu7_a"
  type: "ReLU"
  bottom: "fc7_a"
  top: "fc7_a"
}
layer {
  name: "drop7_a"
  type: "Dropout"
  bottom: "fc7_a"
  top: "fc7_a"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc8-re_a"
  type: "InnerProduct"
  bottom: "fc7_a"
  top: "fc8_a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output:28728 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_a"
  type: "SoftmaxWithLoss"
  bottom: "fc8_a"
  bottom: "label_a"
  top: "loss_a"
  loss_weight: 1
}

layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
mean_value:103.771
mean_value:99.693
mean_value:104.67
  }
  data_param {
    source: "/home/liuhongma/caffe-master3/examples/huawei/lhm_newtrain_28728ID_384_192_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
#input: "data"
#input_shape {
#  dim: 1
#  dim: 3
#  dim: 192
#  dim: 96
#}



layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv1"
  top: "conv1"
  name: "bn1"
  type: "BatchNorm"

}

layer {
  bottom: "conv1"
  top: "conv1"
  name: "scale1"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}


layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv2"
  top: "conv2"
  name: "bn2"
  type: "BatchNorm"

}

layer {
  bottom: "conv2"
  top: "conv2"
  name: "scale2"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv3"
  top: "conv3"
  name: "bn3"
  type: "BatchNorm"

}

layer {
  bottom: "conv3"
  top: "conv3"
  name: "scale3"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
         weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
}
layer {
  bottom: "conv4"
  top: "conv4"
  name: "bn4"
  type: "BatchNorm"

}

layer {
  bottom: "conv4"
  top: "conv4"
  name: "scale4"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
      }
  }
      
}
layer {
  bottom: "conv5"
  top: "conv5"
  name: "bn5"
  type: "BatchNorm"

}

layer {
  bottom: "conv5"
  top: "conv5"
  name: "scale5"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6-rr"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "bn6"
  type: "BatchNorm"

}

layer {
  bottom: "fc6"
  top: "fc6"
  name: "scale6"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7-r"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "bn7"
  type: "BatchNorm"

}

layer {
  bottom: "fc7"
  top: "fc7"
  name: "scale7"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer{
  name:"concat"
  type:"Concat"
  bottom:"fc7"
  bottom:"fc7_a"
  top:"fc7_fuse"
}
layer {
  bottom: "fc7_fuse"
  top: "fc7_fuse"
  name: "bn7_fuse"
  type: "BatchNorm"

}

layer {
  bottom: "fc7_fuse"
  top: "fc7_fuse"
  name: "scale7_fuse"
  type: "Scale"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu7_fuse"
  type: "ReLU"
  bottom: "fc7_fuse"
  top: "fc7_fuse"
}
layer {
  name: "drop7_fuse"
  type: "Dropout"
  bottom: "fc7_fuse"
  top: "fc7_fuse"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8-re_fuse"
  type: "InnerProduct"
  bottom: "fc7_fuse"
  top: "fc8_fuse"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output:28728 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_fuse"
  type: "SoftmaxWithLoss"
  bottom: "fc8_fuse"
  bottom: "label"
  top: "loss_fuse"
  loss_weight: 2 
}
layer {
  name: "fc8-re"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output:28728 
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_b"
  bottom: "label"
  top: "loss"
  loss_weight: 1
}
